#!/bin/bash

function get_version()
{

local VERSION=`pfile_info $1 version | grep -a RDB_RDBM_REVISION | cut -c 21-26`

echo $VERSION

}

function command_exists () {
    type "$1" &> /dev/null ;
}


DATABASE_NAME="file_info.xml"
rm $DATABASE_NAME -f

HEAD="no"
for i in $(find -type f \( -name "P*.7" -o -name "*raw_header.bin" \) ); do
	VER=$(get_version $i)
	if [[ $VER < "14" ]] ; then
        echo "$i is version ${i} and not supported by this code"
    fi

    PARSER="pfile_info"
	
	#Don't bother if we don't have permissions for folder
	PFOLDER=$(dirname "${i}")
	if ! [[ -r "$PFOLDER" ]] ; then
		echo "Don't have permission to read ${PFOLDER}"
		continue;
	fi
	
	P="$(cd "$(dirname $i)" && pwd)/$(basename $i)"
	
	echo "$P"
	# Get the information	
	$PARSER $P xml print > $i.header.txt
	
	if [ -s $i.header.xml ]
	then
	
		if [[ $HEAD == "no" ]] 
		then
			# Keep Header 
			head -n -1 $i.header.xml >> $DATABASE_NAME
			HEAD="yes"
			echo "Set header" 
		else	 
			# Dump the info
			tail -n +3 $i.header.xml | head -n -1  >> $DATABASE_NAME
		fi
	else
		echo "Could not find $i.header.xml"
	
	fi
done

echo "</pfiledatabase>" >> $DATABASE_NAME

